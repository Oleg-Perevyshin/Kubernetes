============================================================================
# Создаем виртуальные машины в Proxmox
# Master:	Debian 13, CPU: 1 Core, RAM: 2048 MB, SSD: 10 GB		- машина управления кластером
# Server:	Talos,     CPU: 4 Core, RAM: 8192 MB, SSD: 50 GB		- сервер (3 шт.)
# Worker:	Talos,     CPU: 2 Core, RAM: 4096 MB, SSD: 100 GB		- рабочий узел (3 шт.)
# BackUp:	Debian 13, CPU: 1 Core, RAM: 2048 MB, SSD: 300 GB		- машина Backup для Longhorn
#
# Создаем образ Talos с расширениями
# siderolabs/amd-ucode
# siderolabs/iscsi-tools
# siderolabs/qemu-guest-agent
# siderolabs/util-linux-tools


# Заходим под root из Proxmox в Мастер, разрешаем sudo пользователю poe и вход root
apt update && apt upgrade -y;
apt install sudo -y;
usermod -aG sudo poe
nano /etc/ssh/sshd_config
  PermitRootLogin yes
  PubkeyAuthentication yes
reboot;

# На рабочем месте генерируем пару ключей RSA 4096 бит
# WINDOWS
{
  ssh-keygen -t rsa -b 4096 -f "$env:USERPROFILE\.ssh\id_rsa_master" -C "master"
  $pubKey = Get-Content "$env:USERPROFILE\.ssh\id_rsa_master.pub"
  Add-Content "$env:USERPROFILE\.ssh\authorized_keys" $pubKey
  icacls "$env:USERPROFILE\.ssh\authorized_keys" /inheritance:r /grant "$($env:USERNAME):(R,W)"

  # Создаем файл config для VSCode для Windows
  Host Master-Node
    HostName 192.168.5.20
    IdentityFile C:\Users\POE\.ssh\id_rsa_master
    User root

  # Подключаемся через VSCode (установится VS Code Server на Мастер машину)

  # Копируем ключи на Мастер-машину, добавляем в authorized_keys и устанавливаем права
  ssh root@192.168.5.20 "mkdir -p ~/.ssh && chmod 700 ~/.ssh" ;
  scp "$env:USERPROFILE\.ssh\id_rsa_master.pub" root@192.168.5.20:~/.ssh/ ;
  ssh root@192.168.5.20 "cat ~/.ssh/id_rsa_master.pub >> ~/.ssh/authorized_keys && chmod 600 ~/.ssh/authorized_keys && chmod 644 ~/.ssh/id_rsa_master.pub" ;
  
  # Проверяем подключение без ввода пароля
  ssh -i "$env:USERPROFILE\.ssh\id_rsa_master" root@192.168.5.20
}
# MacOS
{
  # Генерируем ключи
  ssh-keygen -t rsa -b 4096 -f /Users/poe/.ssh/id_rsa_master -C "master" -N "" && cat /Users/poe/.ssh/id_rsa_master.pub >> /Users/poe/.ssh/authorized_keys && chmod 600 /Users/poe/.ssh/authorized_keys;

  # Копируем ключи на Мастер-машину и Backup, добавляем в authorized_keys и устанавливаем права
  ssh root@192.168.5.20 "mkdir -p ~/.ssh && chmod 700 ~/.ssh" ;
  scp ~/.ssh/id_rsa_master.pub root@192.168.5.20:~/.ssh/ ;
  ssh root@192.168.5.20 " cat ~/.ssh/id_rsa_master.pub >> ~/.ssh/authorized_keys && chmod 600 ~/.ssh/authorized_keys && chmod 644 ~/.ssh/id_rsa_master.pub";

  # Проверяем подключение без ввода пароля
  ssh -i /Users/poe/.ssh/id_rsa_master root@192.168.5.20;

  # Создаем файл config для VSCode для MacOS
  Host Master-Node
      HostName 192.168.5.20
      IdentityFile /Users/poe/.ssh/id_rsa_master
      User root
  # Подключаемся через VSCode (установится VS Code Server на Мастер машину)
}

============================================================================
# Подключаемся по SSH (root) и делаем начальные настройки
# На мастер-машине и BackUp отключаем фаервол, разрешаем установку без ввода пароля
systemctl disable --now ufw && \
  grep -qxF 'poe ALL=(ALL:ALL) NOPASSWD: ALL' /etc/sudoers || echo 'poe ALL=(ALL:ALL) NOPASSWD: ALL' | tee -a /etc/sudoers >/dev/null && \
  sed -i 's/^GRUB_TIMEOUT=.*/GRUB_TIMEOUT=1/' /etc/default/grub && \
  update-grub && \
  reboot;

# Чистим систему на всех машинах
apt clean && apt autoremove -y && poweroff;
